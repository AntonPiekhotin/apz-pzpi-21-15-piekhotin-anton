3 ІНЖЕНЕРНІ РІШЕННЯ

3.1 Структура веб-клієнту системи

Front-End частина проєкту створена за допомогою бібліотеки React. Проєкт має стандартну структуру React-додатків. Розглянемо її детальніше.
Для демонстрації структури клієнтської частини проекту була створена діаграма компонентів з яких вона складається (див. рис. 3.1). На ній відображені всі компоненти системи. 
Вхідною точкою додатку є файл index.js, котрий посилається на файл App.js, в якому описується основна логіка додатку. Код файлу наведено в додатку A.1. В цьому файлі можемо побачити реалізацію шляхів, які описані у файлі router\index.js. Також можемо побачити перевірку аутентифікації користувача, збірігання ролі.
За авторизацію у систему відповідає компонент SignIn. Його код наведено у додатку A.2. В ньому можна побачити запит на сервер для авторизації, збереження даних авторизованого користувача, таких як id, роль та Bearer токен, для створення подальших запитів.
За відображення даних сутностей відповідають такі компоненти як Houses, Devices, Users. Для отримання інформації з бекенд серверу використовується бібліотека Axios, приклад коду запиту до серверної частини наведено у додатку А.3. В кожному запиті передається токен авторизації, в іншому випадку запит не буде опрацьований на сервері.		

3.2 Діяльність веб-клієнту системи 
	
Для демонстрації усіх можливих дій для користувача була розроблена діаграма діяльності (див. рис. 3.2).

3.3 Пакети веб-клієнту системи.

Для демонстрації каталогів системи була розроблена діаграма пакетів (див. рис. 3.3). На неї відображено усі основні пакети, які має система та їх залежність один від одного.

3.4 Реалізація функції резервного копіювання.

Система має функцію створення резервної копії бази даних. Відправляється запит на серверну частину системи та після цього створюється резервна копія даних користувачів на комп’ютері адміністратора. Код для цієї функції наведений у Додатку Б. 


