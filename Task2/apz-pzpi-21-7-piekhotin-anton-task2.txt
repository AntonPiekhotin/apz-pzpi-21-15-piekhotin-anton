3 ІНЖЕНЕРНІ РІШЕННЯ

3.1 Використані технології

Технології, використані для розробки серверної частини, були обрані з
урахуванням функціональних вимог проекту. Для написання серверної частини
була обрана мова програмування Java та фреймворк Spring Boot. Spring Boot
надає зручний і швидкий спосіб створення веб-додатків, маючи рішення для
вирішення всіх проблем нашого проєкту. Для реалізації мікросервісної
архітектури було створено такі модулі як api-gateway фреймворку spring-cloudgateway, для обробки всіх запитів користувачів та переспрямування їх до
відповідного мікросервісу. Auth-service та 3 сервіси, які відповідають за бізнес
логіку. Як бази даних використовується СКБД PostgreSQL, які запускаються
окремо як контейнери Docker, отже кожний сервіс має свою базу даних, що
відповідає архітектурі мікросервісних додатків. Ці бази даних забезпечують
надійне зберігання даних, а фреймворк Spring Data JPA надає функціонал для
зручного спілкування з ними. Всі сервіси системи реалізовані з використанням
Spring Boot, що дозволяє легко і швидко розробляти та підтримувати серверну
частину. Також для тестування системи використовуються такі фреймворки як
JUnit та Mockito, що дозволяють швидко та зручно протестувати написаний
функціонал. Окрім цього, спілкування між сервером та клієнтською частиною,
а також із мобільним додатком, реалізоване за допомогою HTTP запитів, що
забезпечує незалежність кожної частини системи та формує загальну структуру
взаємодії системи.
Додатково можна відмітити реалізацію комунікації між мікросервісами
за допомогою http запитів (Див. Додаток А.3)

3.2 Структура проєкту

Система має мікросервісну структуру проєкту Spring Boot, яка
складається з наступних модулів:
- api-gateway;
- auth-service;
- house-service;
- user-service;
- device-service.
Більш детальна інформація системи представлена на UML-діаграмі
розгортання (див. Додаток Б.1)
Також було створено базову UML-діаграму пакетів для мікросервісів
(див. Додаток Б.2). За цим шаблоном були створені всі мікросервіси системи.

3.3 Специфікація HTTP запитів.

Була створена таблиця-специфікація HTTP запитів усіх методів системи
(див. Додаток В.1).
